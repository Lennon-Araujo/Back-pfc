// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Category {
  id           String        @id @default(uuid())
  name         String        @unique
  created_at   DateTime      @default(now())
  updated_at   DateTime      @updatedAt
  transactions Transaction[]
}

model Transaction {
  id         String                @id @default(uuid())
  name       String
  category   Category?             @relation(fields: [categoryId], references: [id], onDelete: SetNull)
  categoryId String?
  when       DateTime
  cost       Float
  shared     Boolean               @default(false)
  created_at DateTime              @default(now())
  updated_at DateTime              @updatedAt
  users      TransactionsOnUsers[]

  @@index([categoryId], name: "idx_categoryId")
}

model User {
  id            String                @id @default(uuid())
  name          String
  password      String
  email         String                @unique
  created_at    DateTime              @default(now())
  updated_at    DateTime              @updatedAt
  transactions  TransactionsOnUsers[]
  transactionId String?
  sharedWith    Shared[]
}

model TransactionsOnUsers {
  transaction   Transaction @relation(fields: [transactionId], references: [id], onDelete: Cascade)
  transactionId String
  user          User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        String

  @@id([userId, transactionId])
  @@index([userId], name: "idx_userId")
  @@index([transactionId], name: "idx_transactionId")
}

model Shared {
  id     String @id @default(uuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String
  email  String @unique

  @@index([userId], name: "idx_userIdShared")
}
